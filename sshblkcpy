#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

# Set defaults
chunk=$(( 10 * 1024 * 1024 * 1024 ))
bs=$(( 1024 * 1024 ))

function usage() {
	cat >&2 <<-EOF
	Usage: $(basename "$0") [options] statefile infile desthost outfile port

	Available options:
	    -c BYTES    chunk size (default: $chunk)
	    -b BYTES    block size (default: $bs)
	    -i ADDR     remote address for netcat
	EOF
	exit 1
}

while getopts "hc:b:i:" arg; do
    case $arg in
        c)
            chunk="$OPTARG"
            echo "Using chunk size of $chunk"
            ;;
        b)
            bs="$OPTARG"
            echo "Using block size of $bs"
            ;;
        i)
            netcataddr="$OPTARG"
            echo "Using different remote host for netcat: $netcataddr"
            ;;
        h)
            usage
            ;;
        ?)
            usage
            ;;
    esac
done

shift $((OPTIND - 1))
if [ $# -lt 5 ]; then
    usage
fi

statefile="$1"
infile="$2"
desthost="$3"
outfile="$4"
port="$5"

if [[ $chunk -lt $bs ]]; then
    echo 2>&1 "Error: Chunk size must not be less than block size ($bs)"
    exit 1
fi

if [[ $(( chunk % bs )) != 0 ]]; then
    echo 2>&1 "Warning: Chunk size is not a multiple of block size"
fi

if [[ ! -v netcataddr ]]; then
    netcataddr="$desthost"
fi

# $state holds number of bytes already copied
if [ -f "$statefile" ]; then
	state=$(cat "$statefile")
else
	state=0
fi

if [ -b "$infile" ]; then
	echo "Input is block device, using blockdev(1) to determine total size"
	total=$(blockdev --getsize64 "$infile")
else
	echo "Input is file, using stat(1) to determine total size"
	total=$(stat -c '%s' "$infile")
fi

numchunks=$(( (total - 1) / chunk + 1 ))

echo "Copying a total of $total bytes in $numchunks chunks of $chunk bytes"
echo "$state bytes copied so far, resuming"

# Kill all descendents before exiting
trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT

while [ "$state" -lt "$total" ]; do
	# Start offset for the next copy
	offset=$(( ( ( state / chunk ) * chunk ) / bs ))
	echo "Copying block $(( state / chunk + 1)) of $numchunks..."

    # Spawn remote receiver:
    ssh "$desthost" nc -q0 -l -p "$port" \| dd of="$outfile" bs="$bs" seek="$offset" status=none &
    recvpid=$!

    sleep 1

    # Spawn sender
    (set -x; dd if="$infile" bs="$bs" skip="$offset" count="$(( chunk / bs ))" status=progress \
        | nc -q0 "$netcataddr" "$port") &
    senderpid=$!

    # Wait for processes (if one of them fails, errexit will kill the script)
    wait $senderpid
    wait $recvpid

    # Update statefile
    state=$(( ( ( state / chunk ) + 1 ) * chunk ))
    echo "$state" >"$statefile"
    sync --file-system "$statefile"
done
echo "Finished copying!"
